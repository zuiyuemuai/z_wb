<?xml version="1.0" encoding="UTF-8"?><MFE><Modules><Module chinaName="控制" englishName="Control" hardware="04WB200" id="0"><Function><annotation>返回True：按下／False：没有按下</annotation><englishName>getSW1</englishName><chinaName>获取按键SW1动作</chinaName><text>$.getSW1();</text><type>Return</type></Function><Function><annotation>返回True：按下／False：没有按下</annotation><englishName>getSW2</englishName><chinaName>获取按键SW2动作</chinaName><text>$.getSW2();</text><type>Return</type></Function><Function><annotation>返回KEY_LEFT：开关在左／KEY_RIGHT：开关在右</annotation><englishName>getSW3</englishName><chinaName>获取拨码开关SW3状态</chinaName><text>$.getSW3();</text><type>Return</type></Function><Function><annotation>返回圆盘电阻器旋转位置，范围0-100</annotation><englishName>getSW4</englishName><chinaName>获取圆盘电阻SW4位置</chinaName><text>$.getSW4();</text><type>Return</type></Function><Function><annotation>返回True：触摸成功／False：没有触摸</annotation><englishName>getM1</englishName><chinaName>获取触摸口M1信号</chinaName><text>$.getM1();</text><type>Return</type></Function><Function><annotation>返回True：触摸成功／False：没有触摸</annotation><englishName>getM2</englishName><chinaName>获取触摸口M2信号</chinaName><text>$.getM2();</text><type>Return</type></Function><Function><annotation>调节触摸灵敏度(灵敏度：0-100)；</annotation><englishName>setSensitivity</englishName><chinaName>改变触摸灵敏度</chinaName><text>$.setSensitivity(50);</text><type>NoReturn</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><text>$.setOnboardRGB(RGB_B);</text><type>NoReturn</type></Function><Function><englishName>KEY_LEFT</englishName><chinaName>开关在左</chinaName><text>KEY_LEFT</text><type>Define</type></Function><Function><englishName>KEY_RIGHT</englishName><chinaName>开关在右</chinaName><text>KEY_RIGHT</text><type>Define</type></Function><Function><annotation>SW1按下触发，执行大括号中内容</annotation><englishName>SW1_Pressed</englishName><chinaName>事件：当SW1按下</chinaName><text>$.addInterrupter($_SW1_Pressed, SW1|PRESS);</text><type>Interrupt</type></Function><Function><annotation>SW1按下后放手触发，执行大括号中内容</annotation><englishName>SW1_Released</englishName><chinaName>事件：当SW1放手</chinaName><text>$.addInterrupter($_SW1_Released, SW1|RELEASE);</text><type>Interrupt</type></Function><Function><annotation>SW2按下触发，执行大括号中内容</annotation><englishName>SW2_Pressed</englishName><chinaName>事件：当SW2按下</chinaName><text>$.addInterrupter($_SW2_Pressed, SW2|PRESS);</text><type>Interrupt</type></Function><Function><annotation>SW2按下后放手触发，执行大括号中内容</annotation><englishName>SW2_Released</englishName><chinaName>事件：当SW2放手</chinaName><text>$.addInterrupter($_SW2_Released, SW2|RELEASE);</text><type>Interrupt</type></Function><Function><annotation>SW3拨向左边触发，执行大括号中内容</annotation><englishName>SW3_Left</englishName><chinaName>事件：当SW3向左拨动</chinaName><text>$.addInterrupter($_SW3_Left, SW3|LEFT);</text><type>Interrupt</type></Function><Function><annotation>SW3拨向右边触发，执行大括号中内容</annotation><englishName>SW3_Right</englishName><chinaName>事件：当SW3向右拨动</chinaName><text>$.addInterrupter($_SW3_Right, SW3|RIGHT);</text><type>Interrupt</type></Function><Function><annotation>SW4位置值改变触发，执行大括号中内容</annotation><englishName>SW4_Changed</englishName><chinaName>事件：当SW4改变</chinaName><text>$.addInterrupter($_SW4_Changed, SW4|VARY);</text><type>Interrupt</type></Function><Function><annotation>当SW4位置值大于50时，执行大括号中内容</annotation><englishName>Event_getSW4</englishName><chinaName>事件：当SW4位置大于50时</chinaName><text>EVENT ( $.getSW4() &gt; 50 )
{

}</text><type>Event</type></Function><Function><annotation>M1按下触发，执行大括号中内容</annotation><englishName>M1_Pressed</englishName><chinaName>事件：当M1按下</chinaName><text>$.addInterrupter($_M1_Pressed, M1|PRESS);</text><type>Interrupt</type></Function><Function><annotation>M1按下后放手触发，执行大括号中内容</annotation><englishName>M1_Released</englishName><chinaName>事件：当M1放手</chinaName><text>$.addInterrupter($_M1_Released, M1|RELEASE);</text><type>Interrupt</type></Function><Function><annotation>M2按下触发，执行大括号中内容</annotation><englishName>M2_Pressed</englishName><chinaName>事件：当M2按下</chinaName><text>$.addInterrupter($_M2_Pressed, M2|PRESS);</text><type>Interrupt</type></Function><Function><annotation>M2按下后放手触发，执行大括号中内容</annotation><englishName>M2_Released</englishName><chinaName>事件：当M2放手</chinaName><text>$.addInterrupter($_M2_Released, M2|RELEASE);</text><type>Interrupt</type></Function></Module><Module chinaName="信号" englishName="Signal" hardware="08WB200" id="1"><Function><annotation>控制彩灯RGB值(红：0-255，绿：0-255，蓝：0-255)；</annotation><englishName>setRGB</englishName><chinaName>控制RGB灯</chinaName><text>$.setRGB(30, 20, 10);</text><type>NoReturn</type></Function><Function><annotation>控制蜂鸣器(频率：20-20000Hz)；参数为0时，蜂鸣器关闭</annotation><englishName>setBuzzer</englishName><chinaName>设置蜂鸣器频率</chinaName><text>$.setBuzzer(300);</text><type>NoReturn</type></Function><Function><annotation>控制振动马达(强度：0-100)；</annotation><englishName>setVibration</englishName><chinaName>控制振动马达</chinaName><text>$.setVibration(50);</text><type>NoReturn</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><text>$.setOnboardRGB(RGB_B);</text><type>NoReturn</type></Function></Module><Module chinaName="驱动" englishName="Driver" hardware="10WB200" id="2"><Function><annotation>控制电机A(方向：正转／反转，功率：0-200)；</annotation><englishName>setMotorA</englishName><chinaName>设置A通道</chinaName><text>$.setMotorA(DC_DIR_Foreward, 50);</text><type>NoReturn</type></Function><Function><annotation>控制电机B(方向：正转／反转，功率：0-200)；</annotation><englishName>setMotorB</englishName><chinaName>设置B通道</chinaName><text>$.setMotorB(DC_DIR_Foreward, 50);</text><type>NoReturn</type></Function><Function><englishName>DC_DIR_Foreward</englishName><chinaName>正转</chinaName><text>DC_DIR_Foreward</text><type>Define</type></Function><Function><englishName>DC_DIR_Reversal</englishName><chinaName>反转</chinaName><text>DC_DIR_Reversal</text><type>Define</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><text>$.setOnboardRGB(RGB_B);</text><type>NoReturn</type></Function><Function><annotation>设置舵机角度值(角度)；角度范围0-180度。</annotation><englishName>DriverSetServo</englishName><chinaName>设置舵机角度值</chinaName><text>$.setServo(90.5);</text><type>NoReturn</type></Function></Module><Module chinaName="显示" englishName="Display" hardware="09WB200" id="3"><Function><annotation>显示(行:1-16，列:1-15，显示内容：数字／变量／"字符串")； 每个页面只能显示2行，超过2行的需翻页显示</annotation><englishName>print1</englishName><chinaName>带坐标显示</chinaName><text>$.print(1, 1, "WonderBits");</text><type>NoReturn</type></Function><Function><annotation>跟随显示(显示内容：数字／变量／"字符串")；没有坐标，直接跟在上一次显示之后</annotation><englishName>print2</englishName><chinaName>跟随显示</chinaName><text>$.print( "WonderBits");</text><type>NoReturn</type></Function><Function><annotation>高级显示(行，列，显示内容：数字／变量／"字符串"，字体大小：小字／大字，模式：黑底白字／白底黑字)</annotation><englishName>print3</englishName><chinaName>高级显示</chinaName><text>$.print(1, 1, "WonderBits", SIZE_BIG, SHOW_NORMAL);</text><type>NoReturn</type></Function><Function><annotation>设置显示方向（方向：初始显示／翻转显示）</annotation><englishName>setDisplayDirection</englishName><chinaName>设置显示方向</chinaName><text>$.setDisplayDirection(DIR_ROTATED);</text><type>NoReturn</type></Function><Function><annotation>开启翻页功能；</annotation><englishName>enablePageturning</englishName><chinaName>开启翻页功能</chinaName><text>$.enablePageturning();</text><type>NoReturn</type></Function><Function><annotation>关闭翻页功能；</annotation><englishName>disablePageturning</englishName><chinaName>关闭翻页功能</chinaName><text>$.disablePageturning();</text><type>NoReturn</type></Function><Function><annotation>返回BUTTON_NONE：没有按键按下 /BUTTON_L：左键按下 /BUTTON_R：右键按下 /BUTTON_M：中键按下 /BUTTON_ML：中键长按</annotation><englishName>getPagetButton</englishName><chinaName>返回翻页按钮动作</chinaName><text>$.getPagetButton();</text><type>Return</type></Function><Function><annotation>擦除所有页面显示内容；</annotation><englishName>clearAllPages</englishName><chinaName>清屏</chinaName><text>$.clearAllPages();</text><type>NoReturn</type></Function><Function><annotation>擦除某个页面（页数）；</annotation><englishName>clearPage</englishName><chinaName>擦除某页</chinaName><text>$.clearPage(1);</text><type>NoReturn</type></Function><Function><annotation>转到特定一页显示（页数）；</annotation><englishName>trunToPage</englishName><chinaName>转到某页</chinaName><text>$.trunToPage(1);</text><type>NoReturn</type></Function><Function><englishName>SIZE_SMALL</englishName><chinaName>小尺寸字</chinaName><text>SIZE_SMALL</text><type>Define</type></Function><Function><englishName>SIZE_BIG</englishName><chinaName>大尺寸字</chinaName><text>SIZE_BIG</text><type>Define</type></Function><Function><englishName>SHOW_NORMAL</englishName><chinaName>黑底白字</chinaName><text>SHOW_NORMAL</text><type>Define</type></Function><Function><englishName>SHOW_SHADOW</englishName><chinaName>白底黑字</chinaName><text>SHOW_SHADOW</text><type>Define</type></Function><Function><englishName>DIR_ROTATED</englishName><chinaName>翻转显示</chinaName><text>DIR_ROTATED</text><type>Define</type></Function><Function><englishName>DIR_INITIAL</englishName><chinaName>初始显示</chinaName><text>DIR_INITIAL</text><type>Define</type></Function><Function><englishName>BUTTON_NONE</englishName><chinaName>翻页键无操作</chinaName><text>BUTTON_NONE</text><type>Define</type></Function><Function><englishName>BUTTON_L</englishName><chinaName>翻页键被拨向左边</chinaName><text>BUTTON_L</text><type>Define</type></Function><Function><englishName>BUTTON_R</englishName><chinaName>翻页键被拨向右边</chinaName><text>BUTTON_R</text><type>Define</type></Function><Function><englishName>BUTTON_M</englishName><chinaName>翻页键中间按下</chinaName><text>BUTTON_M</text><type>Define</type></Function><Function><englishName>BUTTON_ML</englishName><chinaName>翻页键中间长按</chinaName><text>BUTTON_ML</text><type>Define</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><text>$.setOnboardRGB(RGB_B);</text><type>NoReturn</type></Function><Function><annotation>翻页按键向左拨动触发，执行大括号中内容</annotation><englishName>Button_Left</englishName><chinaName>事件：当翻页按键向左拨动</chinaName><text>$.addInterrupter($_Button_Left, LEFT);</text><type>Interrupt</type></Function><Function><annotation>翻页按键向右拨动触发，执行大括号中内容</annotation><englishName>Button_Right</englishName><chinaName>事件：当翻页按键向右拨动</chinaName><text>$.addInterrupter($_Button_Right, RIGHT);</text><type>Interrupt</type></Function><Function><annotation>拨轮按键按下触发，执行大括号中内容</annotation><englishName>Button_Pressed</englishName><chinaName>事件：当翻页按键按下</chinaName><text>$.addInterrupter($_Button_Pressed, MIDDLE);</text><type>Interrupt</type></Function><Function><annotation>拨轮按键长按触发，执行大括号中内容</annotation><englishName>Button_LongPressed</englishName><chinaName>事件：当翻页按键长按</chinaName><text>$.addInterrupter($_Button_LongPressed, LONG_MIDDLE);</text><type>Interrupt</type></Function><Function><annotation>画点（x轴坐标：1-120；y轴坐标：1-32；页数:1-8），不清除已显示内容</annotation><englishName>Oled_DrawDot</englishName><chinaName>画点</chinaName><text>$.drawDot(60, 32, 1);</text><type>NoReturn</type></Function><Function><annotation>画线（起点X轴坐标：1-120； 起点Y轴坐标：1-32；终点X轴坐标：1-120；终点Y坐标：1-32；页数：1-8），不清除已显示内容</annotation><englishName>Oled_DrawLine</englishName><chinaName>画线</chinaName><text>$.drawLine(1, 1, 120, 32, 1);</text><type>NoReturn</type></Function><Function><annotation>画点（x轴坐标：1-120；y轴坐标：1-32；页数:1-8；模式：DRAW_Normal  不清除已显示内容，DRAW_Cover 清除已显示内容）</annotation><englishName>Oled_DrawDotPlus</englishName><chinaName>高级画点</chinaName><text>$.drawDot(60, 32, 1, DRAW_Cover);</text><type>NoReturn</type></Function><Function><annotation>画线（起点X轴坐标：1-120； 起点Y轴坐标：1-32；终点X轴坐标：1-120；终点Y坐标：1-32；页数：1-8；模式：DRAW_Normal  不清除已显示内容，DRAW_Cover 清除已显示内容）</annotation><englishName>Oled_DrawLinePlus</englishName><chinaName>高级画线</chinaName><text>$.drawLine(1, 1, 120, 32, 1, DRAW_Cover);</text><type>NoReturn</type></Function></Module><Module chinaName="监测" englishName="Observer" hardware="05WB200" id="4"><Function><annotation>返回空气温度，单位摄氏度</annotation><englishName>getTemperature</englishName><chinaName>获取空气温度</chinaName><text>$.getTemperature();</text><type>Return</type></Function><Function><annotation>返回空气湿度，范围0-100%RH</annotation><englishName>getHumidity</englishName><chinaName>获取空气湿度</chinaName><text>$.getHumidity();</text><type>Return</type></Function><Function><annotation>返回环境亮度，范围0-100</annotation><englishName>getLight</englishName><chinaName>获取环境亮度</chinaName><text>$.getLight();</text><type>Return</type></Function><Function><annotation>返回音量强弱，范围0-100</annotation><englishName>getVolume</englishName><chinaName>获取声音响度</chinaName><text>$.getVolume();</text><type>Return</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><text>$.setOnboardRGB(RGB_B);</text><type>NoReturn</type></Function><Function><annotation>光强改变触发，执行大括号中内容</annotation><englishName>Light_Changed</englishName><chinaName>事件：当光强改变</chinaName><text>$.addInterrupter($_Light_Changed, LIGHT|VARY);</text><type>Interrupt</type></Function><Function><annotation>当光强值大于50时，执行大括号中内容</annotation><englishName>Event_getLight</englishName><chinaName>事件：当光强大于50时</chinaName><text>EVENT ( $.getLight() &gt; 50 )
{

}</text><type>Event</type></Function><Function><annotation>声强改变触发，执行大括号中内容</annotation><englishName>Volume_Changed</englishName><chinaName>事件：当声强改变</chinaName><text>$.addInterrupter($_Volume_Changed,VOLUME|VARY);</text><type>Interrupt</type></Function><Function><annotation>当声强值大于50时，执行大括号中内容</annotation><englishName>Event_getVolume</englishName><chinaName>事件：当声强大于50时</chinaName><text>EVENT ( $.getVolume() &gt; 50 )
{

}</text><type>Event</type></Function><Function><annotation>温度改变触发，执行大括号中内容</annotation><englishName>Temperature_Changed</englishName><chinaName>事件：当温度改变</chinaName><text>$.addInterrupter($_Temperature_Changed,TEMP|VARY);</text><type>Interrupt</type></Function><Function><annotation>当温度值大于50时，执行大括号中内容</annotation><englishName>Event_getTemperature</englishName><chinaName>事件：当温度高于30度时</chinaName><text>EVENT ( $.getTemperature() &gt; 50 )
{

}</text><type>Event</type></Function><Function><annotation>湿度改变触发，执行大括号中内容</annotation><englishName>Humidity_Changed</englishName><chinaName>事件：当湿度改变</chinaName><text>$.addInterrupter($_Humidity_Changed,HUMI|VARY);</text><type>Interrupt</type></Function><Function><annotation>当湿度值大于50时，执行大括号中内容</annotation><englishName>Event_getHumidity</englishName><chinaName>事件：当湿度大于50%时</chinaName><text>EVENT ( $.getHumidity() &gt; 50 )
{

}</text><type>Event</type></Function></Module><Module chinaName="电源" englishName="Power" hardware="02WB200" id="5"><Function><annotation>返回电量值，范围0-100</annotation><englishName>getBatteryValue</englishName><chinaName>获取电量</chinaName><text>$.getBatteryValue();</text><type>Return</type></Function><Function><annotation>定时断电(断电时间)；参数单位为秒，写0时立即断电</annotation><englishName>shutdown</englishName><chinaName>定时断电</chinaName><text>$.shutDown(2.5);</text><type>NoReturn</type></Function><Function><annotation>开启四个电源指示灯（初始状态）</annotation><englishName>lightsOn</englishName><chinaName>打开电量指示灯</chinaName><text>$.lightsOn();</text><type>NoReturn</type></Function><Function><annotation>关闭四个电源指示灯</annotation><englishName>lightsOff</englishName><chinaName>关闭电量指示灯</chinaName><text>$.lightsOff();</text><type>NoReturn</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><text>$.setOnboardRGB(RGB_B);</text><type>NoReturn</type></Function><Function><annotation>电量值改变触发，执行大括号中内容</annotation><englishName>Battery_Changed</englishName><chinaName>事件：当电量改变</chinaName><text>$.addInterrupter($_Battery_Changed, VARY);</text><type>Interrupt</type></Function><Function><annotation>当电量大于50%时，执行大括号中内容</annotation><englishName>Event_getBatteryValue</englishName><chinaName>事件：当电量大于50%时</chinaName><text>EVENT ( $.getBatteryValue() &gt; 50 )
{

}</text><type>Event</type></Function></Module><Module chinaName="运动" englishName="Motion" hardware="07WB200" id="6"><Function><annotation>返回加速度(坐标轴：X轴／Y轴／Z轴)；加速度单位：米每平方秒</annotation><englishName>getAcceleration</englishName><chinaName>获取加速度</chinaName><text>$.getAcceleration(SPACE_X);</text><type>Return</type></Function><Function><annotation>返回角速度(坐标轴：X轴／Y轴／Z轴)；角速度单位：度每秒</annotation><englishName>getAngularVelocity</englishName><chinaName>获取角速度</chinaName><text>$.getAngularVelocity(SPACE_X);</text><type>Return</type></Function><Function><annotation>返回旋转角度(坐标轴：X轴／Y轴／Z轴)；</annotation><englishName>getAngle</englishName><chinaName>获取旋转角</chinaName><text>$.getAngle(SPACE_X);</text><type>Return</type></Function><Function><annotation>返回模块Y轴与正南方向夹角；范围-180度到180度</annotation><englishName>getMagnetometer</englishName><chinaName>获取与正南方向夹角</chinaName><text>$.getMagnetometer();</text><type>Return</type></Function><Function><annotation>校正加速度计；函数运行时模块亮黄色灯，这时需保持水平且静止。校正过程持续3秒。</annotation><englishName>calibrateGyroAccelerometer</englishName><chinaName>校正加速度计</chinaName><text>$.calibrateGyroAccelerometer();</text><type>NoReturn</type></Function><Function><annotation>校正磁力计；函数运行时模块亮紫色灯，需要用户绕三个轴各旋转一周，需远离任何金属物体，校正过程需持续16秒。</annotation><englishName>calibrateMagnetometer</englishName><chinaName>校正磁力计</chinaName><text>$.calibrateMagnetometer();</text><type>NoReturn</type></Function><Function><englishName>SPACE_X</englishName><chinaName>X轴</chinaName><text>SPACE_X</text><type>Define</type></Function><Function><englishName>SPACE_Y</englishName><chinaName>Y轴</chinaName><text>SPACE_Y</text><type>Define</type></Function><Function><englishName>SPACE_Z</englishName><chinaName>Z轴</chinaName><text>SPACE_Z</text><type>Define</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><text>$.setOnboardRGB(RGB_B);</text><type>NoReturn</type></Function><Function><annotation>数据更新触发，执行大括号中内容</annotation><englishName>Data_Update</englishName><chinaName>事件：当数据更新</chinaName><text>$.addInterrupter($_Data_Update, UPDATE);</text><type>Interrupt</type></Function></Module><Module chinaName="距离" englishName="Distance" hardware="06WB200" id="7"><Function><annotation>返回与障碍物间的距离；范围30-1000毫米</annotation><englishName>getDistance</englishName><chinaName>获取距离</chinaName><text>$.getDistance();</text><type>Return</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><text>$.setOnboardRGB(RGB_B);</text><type>NoReturn</type></Function><Function><annotation>距离改变触发，执行大括号中内容</annotation><englishName>Distance_Changed</englishName><chinaName>事件：当距离改变</chinaName><text>$.addInterrupter($_Distance_Changed, VARY);</text><type>Interrupt</type></Function><Function><annotation>当距离大于200mm时，执行大括号中内容</annotation><englishName>Event_getDistance</englishName><chinaName>事件：当距离大于200毫米时</chinaName><text>EVENT ( $.getDistance() &gt; 200 )
{

}</text><type>Event</type></Function></Module><Module chinaName="通信" englishName="Communication" hardware="11WB200" id="8"><Function><annotation>获取红外信号；执行此函数时，黄灯代表正在捕获红外数据，当黄灯变为蓝色时红外数据捕获完毕，并且被存在模块中</annotation><englishName>storeIRmessage</englishName><chinaName>捕获并且存储红外数据</chinaName><text>$.storeIRmessage();</text><type>NoReturn</type></Function><Function><annotation>发送保存好的红外信号；</annotation><englishName>sendIRmessage</englishName><chinaName>发送已捕获的红外数据</chinaName><text>$.sendIRmessage();</text><type>NoReturn</type></Function><Function><annotation>通过红外发送数据(数据）；数据范围0-20000</annotation><englishName>Comwrite</englishName><chinaName>发送数据</chinaName><text>$.write(12345);</text><type>NoReturn</type></Function><Function><annotation>返回暂存信息条数；返回0表示无新信息，最多存放16条信息</annotation><englishName>Comavailable</englishName><chinaName>检查是否有新数据</chinaName><text>$.available();</text><type>Return</type></Function><Function><annotation>读取数据；范围0-20000</annotation><englishName>Comread</englishName><chinaName>读取新数据</chinaName><text>$.read();</text><type>Return</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><text>$.setOnboardRGB(RGB_B);</text><type>NoReturn</type></Function><Function><annotation>接收新数据触发，执行大括号中内容</annotation><englishName>Data_Receive</englishName><chinaName>事件：当接收到新数据</chinaName><text>$.addInterrupter($_Data_Receive, IRRECEIVE);</text><type>Interrupt</type></Function></Module><Module chinaName="工具" englishName="Tools" hardware="system" id="123"><Function><annotation>延时（时间）；</annotation><englishName>Tools_delay</englishName><chinaName>延时500毫秒</chinaName><import>null</import><text>delay(500);</text><type>Define</type></Function><Function><annotation>定义整数变量，变量名不能重复。</annotation><englishName>Tools_int</englishName><chinaName>定义一个整数变量</chinaName><import>null</import><text>int Zhengshu_a = 0;</text><type>Define</type></Function><Function><annotation>定义小数变量，变量名不能重复。</annotation><englishName>Tools_float</englishName><chinaName>定义一个小数变量</chinaName><import>null</import><text>float Xiaoshu_a = 0.0;</text><type>Define</type></Function><Function><englishName>Tools_if</englishName><chinaName>如果..</chinaName><import>null</import><text>if( )
{

}</text><type>Define</type></Function><Function><englishName>Tools_ifelse</englishName><chinaName>如果../否则..</chinaName><import>null</import><text>if( )
{

}
else
{

}</text><type>Define</type></Function><Function><englishName>Tools_for</englishName><chinaName>循环10次</chinaName><import>null</import><text>for(int i = 0; i &lt; 10; i++)
{

}</text><type>Define</type></Function><Function><englishName>Tools_while</englishName><chinaName>当...</chinaName><import>null</import><text>while( )
{

}</text><type>Define</type></Function><Function><englishName>Tools_Setup</englishName><chinaName>初始化程序</chinaName><import>null</import><text>void setup()
{

}</text><type>Define</type></Function><Function><annotation>每隔1.5秒执行大括号中内容</annotation><englishName>Tools_TIME</englishName><chinaName>事件：定时触发</chinaName><import>system</import><text>TIME(setCycle(1.5))
{

}</text><type>Event</type></Function><Function><annotation>返回随机数（最小值，最大值）；返回最小值 到最大值-1 的随机数</annotation><englishName>Tools_random</englishName><chinaName>返回随机数</chinaName><import>null</import><text>random(1, 100);</text><type>Return</type></Function><Function><annotation>初始化伪随机数生成器(初始化值)；</annotation><englishName>Tools_randomSeed</englishName><chinaName>设定随机数种子</chinaName><import>null</import><text>randomSeed(1234);</text><type>NoReturn</type></Function></Module><Module chinaName="数学" englishName="Math" hardware="system" id="120"><Function><englishName>GreatThen</englishName><chinaName>判断是否大于</chinaName><import>null</import><text>&gt;</text><type>Define</type></Function><Function><englishName>LessThen</englishName><chinaName>判断是否小于</chinaName><import>null</import><text>&lt;</text><type>Define</type></Function><Function><englishName>Math_EqualsTo</englishName><chinaName>判断是否等于</chinaName><import>null</import><text> ==</text><type>Define</type></Function><Function><englishName>Math_NotEqualsTo</englishName><chinaName>判断是否不等于</chinaName><import>null</import><text> !=</text><type>Define</type></Function><Function><englishName>Math_TRUE</englishName><chinaName>逻辑真</chinaName><import>null</import><text> true</text><type>Define</type></Function><Function><englishName>Math_FALSE</englishName><chinaName>逻辑假</chinaName><import>null</import><text> false</text><type>Define</type></Function><Function><englishName>Math_LogicAND</englishName><chinaName>逻辑与</chinaName><import>null</import><text>&amp;&amp;</text><type>Define</type></Function><Function><englishName>Math_LogicOR</englishName><chinaName>逻辑或</chinaName><import>null</import><text>||</text><type>Define</type></Function><Function><englishName>Math_LogicNOT</englishName><chinaName>逻辑非</chinaName><import>null</import><text>!</text><type>Define</type></Function><Function><englishName>Math_Plus</englishName><chinaName>加号</chinaName><import>null</import><text> +</text><type>Define</type></Function><Function><englishName>Math_Minus</englishName><chinaName>减号</chinaName><import>null</import><text>-</text><type>Define</type></Function><Function><englishName>Math_Multiplication</englishName><chinaName>乘号</chinaName><import>null</import><text>*</text><type>Define</type></Function><Function><englishName>Math_Division</englishName><chinaName>除号</chinaName><import>null</import><text>/</text><type>Define</type></Function><Function><englishName>Math_remainder</englishName><chinaName>取余数号</chinaName><import>null</import><text>%</text><type>Define</type></Function><Function><annotation>绝对值（任意数）；</annotation><englishName>Math_Abs</englishName><chinaName>绝对值运算</chinaName><import>null</import><text>abs( -12 );</text><type>Return</type></Function><Function><annotation>幂运算（底数，幂）；</annotation><englishName>Math_Pow</englishName><chinaName>幂运算</chinaName><import>null</import><text>pow( 2, 3);</text><type>Return</type></Function><Function><annotation>平方根（被开方数）;</annotation><englishName>Math_Sqrt</englishName><chinaName>平方根运算</chinaName><import>null</import><text>sqrt( 16 );</text><type>Return</type></Function><Function><annotation>计算角度的正弦（弧度）;结果在-1和1之间。</annotation><englishName>Math_sin</englishName><chinaName>sin</chinaName><import>null</import><text>sin(0.5*PI);</text><type>Return</type></Function><Function><annotation>计算角度的余弦（弧度）;结果在-1和1之间。</annotation><englishName>Math_cos</englishName><chinaName>cos</chinaName><import>null</import><text>cos(0.5*PI);</text><type>Return</type></Function><Function><annotation>计算角度的正切（弧度）；结果在负无穷大和无穷大之间。</annotation><englishName>Math_tan</englishName><chinaName>tan</chinaName><import>null</import><text>tan(0.5*PI);</text><type>Return</type></Function><Function><annotation>约束(数据，下限，上限)；将一个数约束在一个范围内</annotation><englishName>Math_Constrain</englishName><chinaName>约束范围</chinaName><import>null</import><text>constrain(17, 10, 100);</text><type>Return</type></Function><Function><annotation>映射（数据，数据源下限，数据源上限，目标下限，目标上限）；将一个数从一个范围映射到另外一个范围。</annotation><englishName>Math_Map</englishName><chinaName>映射</chinaName><import>null</import><text>map(17, 0, 255, 0, 100);</text><type>Return</type></Function></Module><Module chinaName="添加" englishName="Add" hardware="system" id="121"><Function><englishName>addControl</englishName><img>modules/on/Control.png</img><import>null</import><type>Click</type></Function><Function><englishName>addSignal</englishName><img>modules/on/Signal.png</img><import>null</import><type>Click</type></Function><Function><englishName>addDriver</englishName><img>modules/on/Driver.png</img><import>null</import><type>Click</type></Function><Function><englishName>addDisplay</englishName><img>modules/on/Display.png</img><import>null</import><type>Click</type></Function><Function><englishName>addObserver</englishName><img>modules/on/Observer.png</img><import>null</import><type>Click</type></Function><Function><englishName>addPower</englishName><img>modules/on/Power.png</img><import>null</import><type>Click</type></Function><Function><englishName>addMotion</englishName><img>modules/on/Motion.png</img><import>null</import><type>Click</type></Function><Function><englishName>addDistance</englishName><img>modules/on/Distance.png</img><import>null</import><type>Click</type></Function><Function><englishName>addCommunication</englishName><img>modules/on/Communication.png</img><import>null</import><type>Click</type></Function><Function><englishName>addServo</englishName><img>modules/on/Servo.png</img><import>null</import><type>Click</type></Function></Module><Module chinaName="主控" englishName="Master" hardware="system" id="122"><Function><annotation>串口打印（内容：数字／变量／"字符串"）；显示完内容后自动换行</annotation><englishName>serial.println</englishName><chinaName>串口打印加换行</chinaName><import>SysMaster</import><text>sysmaster.serial.println("WonderBits");</text><type>NoReturn</type></Function><Function><annotation>串口打印（内容：数字／变量／"字符串"）；</annotation><englishName>serial.print</englishName><chinaName>串口打印</chinaName><import>SysMaster</import><text>sysmaster.serial.print("WonderBits");</text><type>NoReturn</type></Function><Function><annotation>返回暂存信息条数；返回0表示无新信息</annotation><englishName>serial.available</englishName><chinaName>检查串口是否有新数据</chinaName><import>SysMaster</import><text>sysmaster.serial.available();</text><type>Return</type></Function><Function><annotation>从串口读取一个数据</annotation><englishName>serial.read</englishName><chinaName>从串口读取一个数据</chinaName><import>SysMaster</import><text>sysmaster.serial.read();</text><type>Return</type></Function><Function><annotation>直接写入存储器（内容：数字/变量）；写入后地址自动后移</annotation><englishName>Masterwrite</englishName><chinaName>顺序写入存储器</chinaName><import>SysMaster</import><text>sysmaster.write(12.5);</text><type>NoReturn</type></Function><Function><annotation>返回存储器内容；读取成功后地址移动到下一个内容处</annotation><englishName>Masterread</englishName><chinaName>顺序读取存储器</chinaName><import>SysMaster</import><text>sysmaster.read();</text><type>Return</type></Function><Function><annotation>返回顺序写入的未读取数据个数；</annotation><englishName>Masteravailable</englishName><chinaName>返回未读取数据个数</chinaName><import>SysMaster</import><text>sysmaster.available();</text><type>Return</type></Function><Function><annotation>存数据（地址：0-250，数据）；</annotation><englishName>addresswrite</englishName><chinaName>按地址写数据</chinaName><import>SysMaster</import><text>sysmaster.write(10,12.5);</text><type>NoReturn</type></Function><Function><annotation>返回该地址中存储的数据（地址：0~250）；</annotation><englishName>addressread</englishName><chinaName>按地址读数据</chinaName><import>SysMaster</import><text>sysmaster.read(10);</text><type>Return</type></Function><Function><annotation>清除存储器中的内容</annotation><englishName>Masterclear</englishName><chinaName>清除存储器</chinaName><import>SysMaster</import><text>sysmaster.clear();</text><type>NoReturn</type></Function><Function><annotation>控制模块定时重启（时间）；参数以毫秒为单位，填0时立即重启</annotation><englishName>Masterreset</englishName><chinaName>定时重启</chinaName><import>SysMaster</import><text>sysmaster.reset(2.5);</text><type>NoReturn</type></Function><Function><annotation>控制通用彩灯(颜色)； 8种颜色可选</annotation><englishName>setOnboardRGB</englishName><chinaName>设置通用彩色灯</chinaName><import>SysMaster</import><text>sysmaster.setOnboardRGB(RGB_R);</text><type>NoReturn</type></Function><Function><annotation>按下按键（键值）；相当于按下小写a</annotation><englishName>keyboard.press</englishName><chinaName>模拟键盘按下按键</chinaName><import>SysMaster</import><text>sysmaster.keyboard.press('a');</text><type>NoReturn</type></Function><Function><annotation>松开按键（键值）；相当于松开小写a建，一般使用keyboard.press后，使用keyboard.release</annotation><englishName>keyboard.release</englishName><chinaName>模拟键盘松开按键</chinaName><import>SysMaster</import><text>sysmaster.keyboard.release('a');</text><type>NoReturn</type></Function><Function><annotation>松开所有按键，是有keyboard.press按下的所有按键被松开</annotation><englishName>keyboard.releaseAll</englishName><chinaName>模拟按键松开所有按键</chinaName><import>SysMaster</import><text>sysmaster.keyboard.releaseAll();</text><type>NoReturn</type></Function><Function><annotation>鼠标移动（横向距离，纵向距离）；横向正数向右负数向左，纵向正数向上负数向下</annotation><englishName>mouse.move</englishName><chinaName>模拟鼠标移动</chinaName><import>SysMaster</import><text>sysmaster.mouse.move(40,40);</text><type>NoReturn</type></Function><Function><annotation>鼠标按下按键（键值）；鼠标按下左键，右键键值MOUSE_RIGHT</annotation><englishName>mouse.press</englishName><chinaName>模拟鼠标按下按键</chinaName><import>SysMaster</import><text>sysmaster.mouse.press(MOUSE_LEFT);</text><type>NoReturn</type></Function><Function><annotation>鼠标松开按键（键值）；鼠标松开左键，右键键值MOUSE_RIGHT</annotation><englishName>mouse.release</englishName><chinaName>模拟鼠标松开按键</chinaName><import>SysMaster</import><text>sysmaster.mouse.release(MOUSE_LEFT);</text><type>NoReturn</type></Function><Function><annotation>当串口未读取数据数量大于0时，执行大括号中内容</annotation><englishName>Event_serialAvailable</englishName><chinaName>事件：串口有未读取的数据</chinaName><import>SysMaster</import><text>EVENT ( sysmaster.serial.available() &gt; 0 )
{

}</text><type>Event</type></Function></Module><Module chinaName="舵机" englishName="Servo" hardware="" id="22"><Function><annotation>设定舵机连接的引脚（引脚号）；</annotation><englishName>Servo_attach1</englishName><chinaName>舵机绑定IO口</chinaName><text>$.attach(9);</text><type>NoReturn</type></Function><Function><annotation>控制舵机转动（角度）；</annotation><englishName>Servo_Write1</englishName><chinaName>控制舵机转动</chinaName><text>$.write(90);</text><type>NoReturn</type></Function></Module></Modules><Blendent><Color color="64 224 208" type="Interrupt"/><Color color="0 0 255" type="Define"/><Color color="255 140 0" type="NoReturn"/><Color color="0 238 0" type="Return"/><Color color="255 255 255" type="Click"/><Color color="255 228 181" type="Event"/></Blendent></MFE>